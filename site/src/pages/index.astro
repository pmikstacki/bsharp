---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import FeaturesGrid from '../components/FeaturesGrid.astro';
import InstallSection from '../components/InstallSection.astro';
import ParserDiagram from '../components/ParserDiagram.astro';
import FormattingDemo from '../components/FormattingDemo.astro';
import AnalysisDemo from '../components/AnalysisDemo.astro';
const rawBase = import.meta.env.BASE_URL || '/';
const base = rawBase.endsWith('/') ? rawBase : `${rawBase}/`;
---

<Layout title="BSharp â€” C# Platform">
  <Hero base={base} />
  <FeaturesGrid />

  <section id="parser" class="mx-auto w-full px-4 py-16 md:px-8">
    <div class="prose prose-slate dark:prose-invert" data-reveal>
      <h2>Parser</h2>
      <p>The BSharp parser provides a solid foundation for downstream tooling, ensuring correctness and performance across large codebases.</p>
    </div>
    <div class="mt-8" data-reveal>
      <ParserDiagram />
    </div>
  </section>

  <section id="formatter" class="mx-auto w-full px-4 py-16 md:px-8">
    <div class="prose prose-slate dark:prose-invert" data-reveal>
      <h2>Formatter</h2>
      <p>Consistent formatting enhances readability and keeps diffs stable.</p>
    </div>
    <div class="mt-8" data-reveal>
      <FormattingDemo />
    </div>
  </section>


  <section id="analysis" class="mx-auto w-full px-4 py-16 md:px-8">
    <div class="prose prose-slate dark:prose-invert" data-reveal>
      <h2>Analysis Pipeline</h2>
      <p>A modular analysis pipeline captures accurate control-flow and dependency information for advanced insights.</p>
    </div>
    <div class="mt-8" data-reveal>
      <AnalysisDemo />
    </div>
  </section>

  <section id="compiler" class="mx-auto w-full px-4 py-16 md:px-8">
    <div class="prose prose-slate dark:prose-invert" data-reveal>
      <h2>LLVM-based Compiler (planned)</h2>
      <p>We aim to provide an LLVM-based backend for high-performance native targets.</p>
    </div>
  </section>

  <InstallSection />

  <script type="module" define:vars={{ base }}>
    import { gsap } from '/node_modules/gsap/index.js';
    import ScrollTrigger from '/node_modules/gsap/ScrollTrigger/index.js';
    gsap.registerPlugin(ScrollTrigger);

    (function(){
      document.querySelectorAll('[data-reveal]').forEach((el) => {
        gsap.fromTo(el, { y: 24, opacity: 0 }, {
          y: 0,
          opacity: 1,
          duration: 0.8,
          ease: 'power2.out',
          scrollTrigger: { trigger: el, start: 'top 85%', toggleActions: 'play none none reverse' }
        });
      });

      document.querySelectorAll('[data-parallax-y]')?.forEach((el) => {
        const speed = parseFloat(el.getAttribute('data-parallax-y') || '0.2');
        gsap.to(el, {
          yPercent: speed * 20,
          ease: 'none',
          scrollTrigger: { trigger: el, start: 'top bottom', end: 'bottom top', scrub: true }
        });
      });
    })();
  </script>
</Layout>
