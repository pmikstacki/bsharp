/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/trig-js@4.2.0/src/trig.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
class Trig{trigs=[];thePos=[];height=0;scrollDir=["trig-scroll-down","trig-scroll-up"];trigClass="trig-down";observer;trigScrollTimeout=null;trigAttributesCache=new Map;constructor(){this.trigInit=this.trigInit.bind(this),this.trigWindowHeight=this.trigWindowHeight.bind(this),this.trigScroll=this.trigScroll.bind(this),this.trigObserver=this.trigObserver.bind(this),this.observer=new IntersectionObserver(this.trigObserver),this.trigWindowHeight()}trigInit(){this.observer=new IntersectionObserver(this.trigObserver),this.trigs=document.querySelectorAll("body,.enable-trig,[data-trig]"),this.trigScroll()}trigWindowHeight(){this.height=innerHeight}trigScroll(){this.trigs&&0!==this.trigs.length&&this.trigs.forEach(((t,i)=>{t.index=i,this.observer.observe(t)}))}trigEntries(t){t.forEach((t=>{1==this.trigIntersecting(t)?(this.trigPos(t),this.updatePos(t.target)):document.body==t.target&&(0==t.target.index&&this.trigDirection(t),this.trigPos(t),this.updatePos(t.target))}))}trigDirection(t){var i=t.boundingClientRect.y;this.scrollPos&&(this.scrollPos<i?(this.scrollDir=["trig-scroll-down","trig-scroll-up"],this.trigClass="trig-up"):this.scrollPos>i&&(this.scrollDir=["trig-scroll-up","trig-scroll-down"],this.trigClass="trig-down")),this.scrollPos=i}trigObserver(t){requestAnimationFrame((()=>{this.trigEntries(t)})),t.forEach((t=>{this.observer.unobserve(t.target)}))}trigIntersecting(t){return document.body!=t.target&&(t.isIntersecting?t.target.classList.contains("trig")||t.target.classList.add("trig",this.trigClass):t.target.classList.remove("trig","trig-down","trig-up"),!0)}trigPos(t){const i=this.getTrigOptions(t),{top:e,height:r}=t.boundingClientRect,s=Math.max(this.height,r),o=this.calculatePosTop(t.target,e,i),g=this.calculatePosition(o,s,i,t.target);this.trigSetPos(g,i.min,i.max,t.target)}getTrigOptions(t){const i={negativeOffset:0,offset:0,height:0,min:-100,max:100};return Object.keys(i).forEach((e=>{i[e]=this.trigAttributes(t,i,e)})),i}calculatePosTop(t,i,e){const r=this.height/2;return t===document.body?-i:e.negativeOffset>0?-(i-(r+e.negativeOffset)):-(i-(r-e.offset))}calculatePosition(t,i,e,r){return t/(r===document.body?i-this.height:i+e.height)*100}trigAttributes(t,i,e){let r=this.trigAttributesCache.get(t.target);r||(r={},this.trigAttributesCache.set(t.target,r));let s=t.target.getAttribute("data-trig-"+e);return s&&(r[e]=s),r[e]||i[e]}trigSetPos(t,i,e,r){t>=i&&t<=e?this.thePos[r.index]=t:t<=i?this.thePos[r.index]=i:t>=e&&(this.thePos[r.index]=e)}trigSetBody(t){const i=t.classList;this.updateScrollDirection(i),this.applySplitPoints(t)}updateScrollDirection(t){t.contains(this.scrollDir[0])?t.replace(this.scrollDir[0],this.scrollDir[1]):t.contains(this.scrollDir[1])||t.add("trig-scroll-up")}applySplitPoints(t){[0,25,50,75,100].forEach((i=>this.trigSplit(i,t.index,t.classList)))}trigSplit(t,i,e){var r=t;0==t||100==t?this.trigSplitEquals(r,t,e,i):this.trigSplitMoreThan(r,t,e,i)}trigSplitEquals(t,i,e,r){const s=this.thePos[r],o={0:{name:"top",min:0,max:1},100:{name:"bottom",min:99,max:100}};if(o[i]){const{name:t,min:r,max:g}=o[i];e.toggle(`trig-scroll-${t}`,s>=r&&s<=g)}}trigSplitMoreThan(t,i,e,r){this.thePos[r]>=i?e.add("trig-scroll-"+t):this.thePos[r]<i&&e.remove("trig-scroll-"+t)}trigSetVars(t,i,e){if(!this.thePos[t.index])return;const r=Math.ceil(this.thePos[t.index]),s={trigVar:{key:"--trig",value:`${r}%`,reverse:-r+"%"},trigPixels:{key:"--trig-px",value:`${r}px`,reverse:-r+"px"},trigDegrees:{key:"--trig-deg",value:`${Math.ceil(r/100*360)}deg`,reverse:`${Math.ceil(r/100*-360)}deg`}};this.setCSSVariables(i,e,s,t)}setCSSVariables(t,i,e,r){Object.entries(e).forEach((([e,{key:s,value:o,reverse:g}])=>{t.getPropertyValue(s)!=o&&r.dataset[e]&&(r.dataset[e]=10*Math.round(parseInt(o)/10),t.setProperty(s+i,o),t.setProperty(s+i+"-reverse",g))}))}updatePos(t){if("true"==t.dataset.trigGlobal)var i=document.documentElement.style,e="-"+t.id;else i=t.style,e="";document.body==t?this.trigSetBody(t):this.trigSetVars(t,i,e)}}const trig=new Trig;window.addEventListener("scroll",trig.trigScroll,{passive:!0}),window.addEventListener("resize",trig.trigWindowHeight,{passive:!0}),window.addEventListener("load",trig.trigInit,{passive:!0});
//# sourceMappingURL=/sm/d70f83ad5d1efeffbe8a8d80563be38f9a6a0e951789e2737da7101e41eac320.map